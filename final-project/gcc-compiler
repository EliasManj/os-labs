#!/bin/bash

#########################################################
# Install Dependencies
#########################################################

sudo apt-get install build-essential bison flex libgmp3-dev libmpc-dev libmpfr-dev texinfo libcloog-isl-dev libisl-dev


#########################################################
# Create a temporal data and define environment variables
#########################################################

export SRCDIR=$HOME/src
mkdir -p $SRCDIR
export PREFIX="$HOME/opt/cross"
mkdir -p $PREFIX
export TARGET=i686-elf
export PATH="$PREFIX/bin:$PATH"


#########################################################
# Building Binutils
#########################################################

cd $SRCDIR
wget https://ftp.gnu.org/gnu/binutils/binutils-2.31.tar.xz
tar -xJf binutils-2.31.tar.xz
mkdir -p build-binutils/
cd build-binutils
../binutils-2.31/configure --target=$TARGET --prefix="$PREFIX" --with-sysroot --disable-nls --disable-werror
make
make install


#########################################################
# Building custom gcc
#########################################################

cd $HOME/src

# The $PREFIX/bin dir _must_ be in the PATH. We did that above.
which -- $TARGET-as || echo $TARGET-as is not in the PATH
tar -xJf gcc-8.2.0.tar.xz
wget https://ftp.gnu.org/gnu/gcc/gcc-8.2.0/gcc-8.2.0.tar.xz
mkdir -p build-gcc
cd build-gcc
../gcc-8.2.0/configure --target=$TARGET --prefix="$PREFIX" --disable-nls --enable-languages=c,c++ --without-headers
make all-gcc
make all-target-libgcc
make install-gcc
make install-target-libgcc
$HOME/opt/cross/bin/$TARGET-gcc --version
